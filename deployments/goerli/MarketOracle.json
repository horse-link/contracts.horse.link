{
  "address": "0xdA5795A850aDEFCdC070c580b2CC6bEc3443fA3f",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes16",
          "name": "marketId",
          "type": "bytes16"
        },
        {
          "indexed": true,
          "internalType": "bytes16",
          "name": "propositionId",
          "type": "bytes16"
        }
      ],
      "name": "ResultSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "marketId",
          "type": "bytes16"
        },
        {
          "internalType": "bytes16",
          "name": "propositionId",
          "type": "bytes16"
        }
      ],
      "name": "checkResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "marketId",
          "type": "bytes16"
        }
      ],
      "name": "getResult",
      "outputs": [
        {
          "internalType": "bytes16",
          "name": "",
          "type": "bytes16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "marketId",
          "type": "bytes16"
        },
        {
          "internalType": "bytes16",
          "name": "propositionId",
          "type": "bytes16"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct SignatureLib.Signature",
          "name": "signature",
          "type": "tuple"
        }
      ],
      "name": "setResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf005a0d2afff5db77abad2e04a0f3f2933cdc8df7748da28c8436b85cb232adb",
  "receipt": {
    "to": null,
    "from": "0x1Ab4C6d9e25Fc65C917aFBEfB4E963C400Fb9814",
    "contractAddress": "0xdA5795A850aDEFCdC070c580b2CC6bEc3443fA3f",
    "transactionIndex": 549,
    "gasUsed": "755384",
    "logsBloom": "0x
    "blockHash": "0xe81aeacd915363cb0d6b607b9075f7bd4afb25e8b24e4923f8ce0841cf144c74",
    "transactionHash": "0xf005a0d2afff5db77abad2e04a0f3f2933cdc8df7748da28c8436b85cb232adb",
    "logs": [],
    "blockNumber": 8285998,
    "cumulativeGasUsed": "19752635",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a4277726a6c0c8713fb9930aa18f6d54",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes16\",\"name\":\"marketId\",\"type\":\"bytes16\"},{\"indexed\":true,\"internalType\":\"bytes16\",\"name\":\"propositionId\",\"type\":\"bytes16\"}],\"name\":\"ResultSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes16\",\"name\":\"marketId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"propositionId\",\"type\":\"bytes16\"}],\"name\":\"checkResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes16\",\"name\":\"marketId\",\"type\":\"bytes16\"}],\"name\":\"getResult\",\"outputs\":[{\"internalType\":\"bytes16\",\"name\":\"\",\"type\":\"bytes16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes16\",\"name\":\"marketId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"propositionId\",\"type\":\"bytes16\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct SignatureLib.Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"setResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MarketOracle.sol\":\"MarketOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.10;\\n\\nimport \\\"./SignatureLib.sol\\\";\\n\\n// Binary Oracle\\ninterface IOracle {\\n    function checkResult(\\n        bytes16 marketId,\\n        bytes16 propositionId\\n    ) external view returns (bool);\\n\\n    function getResult(bytes16 marketId) external view returns (bytes16);\\n\\n    function setResult(\\n        bytes16 marketId,\\n        bytes16 propositionId,\\n        SignatureLib.Signature calldata signature\\n    ) external;\\n\\n    event ResultSet(bytes16 indexed marketId, bytes16 indexed propositionId);\\n}\",\"keccak256\":\"0xfeca1e8a72e0b4d54a08df6f2446e58e0ce3a83d94aeb48b67c4ac3b1df8f9f4\",\"license\":\"MIT\"},\"contracts/MarketOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.10;\\n\\nimport \\\"./IOracle.sol\\\";\\nimport \\\"./SignatureLib.sol\\\";\\n\\ncontract MarketOracle is IOracle {\\n\\tmapping(bytes16 => bytes16) private _results;\\n\\taddress private immutable _owner;\\n\\n\\tconstructor() {\\n\\t\\t_owner = msg.sender;\\n\\t}\\n\\n\\tfunction getOwner() external view returns (address) {\\n\\t\\treturn _owner;\\n\\t}\\n\\n\\tfunction checkResult(\\n\\t\\tbytes16 marketId,\\n\\t\\tbytes16 propositionId\\n\\t) external view returns (bool) {\\n\\t\\trequire(\\n\\t\\t\\tpropositionId != bytes16(0),\\n\\t\\t\\t\\\"getBinaryResult: Invalid propositionId\\\"\\n\\t\\t);\\n\\t\\treturn _results[marketId] == propositionId;\\n\\t}\\n\\n\\tfunction getResult(bytes16 marketId) external view returns (bytes16) {\\n\\t\\trequire(\\n\\t\\t\\tmarketId != bytes16(0),\\n\\t\\t\\t\\\"getBinaryResult: Invalid propositionId\\\"\\n\\t\\t);\\n\\t\\treturn _results[marketId];\\n\\t}\\n\\n\\tfunction setResult(\\n\\t\\tbytes16 marketId,\\n\\t\\tbytes16 propositionId,\\n\\t\\tSignatureLib.Signature calldata signature\\n\\t) external {\\n\\t\\tbytes32 messageHash = keccak256(abi.encodePacked(marketId, propositionId));\\n\\t\\trequire(\\n\\t\\t\\tisValidSignature(messageHash, signature),\\n\\t\\t\\t\\\"setBinaryResult: Invalid signature\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\tpropositionId != bytes16(0),\\n\\t\\t\\t\\\"setBinaryResult: Invalid propositionId\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\t_results[marketId] == bytes16(0),\\n\\t\\t\\t\\\"setBinaryResult: Result already set\\\"\\n\\t\\t);\\n\\t\\t_results[marketId] = propositionId;\\n\\n\\t\\temit ResultSet(marketId, propositionId);\\n\\t}\\n\\n\\tfunction isValidSignature(\\n\\t\\tbytes32 messageHash,\\n\\t\\tSignatureLib.Signature calldata signature\\n\\t) private view returns (bool) {\\n\\t\\taddress signer = SignatureLib.recoverSigner(messageHash, signature);\\n\\t\\tassert(signer != address(0));\\n\\t\\treturn address(signer) == address(_owner);\\n\\t}\\n}\\n\",\"keccak256\":\"0xef42348637a9de3da93dbc112eab17de1e3d2de50ba1ca1e338660d34b63c9f4\",\"license\":\"MIT\"},\"contracts/SignatureLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.10;\\n\\nlibrary SignatureLib {\\n    struct Signature {\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n    }\\n\\n    function recoverSigner(\\n        bytes32 message,\\n        Signature memory signature\\n    ) public pure returns (address) {\\n        bytes32 prefixedHash = keccak256(\\n            abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", message)\\n        );\\n        return ecrecover(prefixedHash, signature.v, signature.r, signature.s);\\n    }\\n}\\n\",\"keccak256\":\"0x030d6d33efc780f65e027c212235482f115a3f91f04195ebf5543c6b984ea3cd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050608051610cc36100676000396000818161028e01526105bf0152610cc36000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306c77ce7146100515780634b51e70a14610081578063893d20e8146100b15780639a56d919146100cf575b600080fd5b61006b60048036038101906100669190610672565b6100eb565b60405161007891906106cd565b60405180910390f35b61009b600480360381019061009691906106e8565b6101cf565b6040516100a89190610724565b60405180910390f35b6100b961028a565b6040516100c69190610780565b60405180910390f35b6100e960048036038101906100e491906107bf565b6102b2565b005b60008060801b6fffffffffffffffffffffffffffffffff1916826fffffffffffffffffffffffffffffffff19161415610159576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015090610895565b60405180910390fd5b816fffffffffffffffffffffffffffffffff1916600080856fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460801b6fffffffffffffffffffffffffffffffff191614905092915050565b60008060801b6fffffffffffffffffffffffffffffffff1916826fffffffffffffffffffffffffffffffff1916141561023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610895565b60405180910390fd5b600080836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460801b9050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600083836040516020016102c79291906108d6565b6040516020818303038152906040528051906020012090506102e98183610500565b610328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031f90610974565b60405180910390fd5b600060801b6fffffffffffffffffffffffffffffffff1916836fffffffffffffffffffffffffffffffff19161415610395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038c90610a06565b60405180910390fd5b600060801b6fffffffffffffffffffffffffffffffff1916600080866fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460801b6fffffffffffffffffffffffffffffffff191614610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043d90610a98565b60405180910390fd5b82600080866fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff021916908360801c0217905550826fffffffffffffffffffffffffffffffff1916846fffffffffffffffffffffffffffffffff19167f1a26e02557415617cb31ed9c9ac1bbe2c8f5e32b8f13ddc706d9ad0afb3c2b4460405160405180910390a350505050565b600080732686e2ec431b90b5c5b21408771ebf377dbb07bd635cff288d85856040518363ffffffff1660e01b815260040161053c929190610bdc565b602060405180830381865af4158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d9190610c31565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105bd576105bc610c5e565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161491505092915050565b600080fd5b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b61064f8161061a565b811461065a57600080fd5b50565b60008135905061066c81610646565b92915050565b6000806040838503121561068957610688610615565b5b60006106978582860161065d565b92505060206106a88582860161065d565b9150509250929050565b60008115159050919050565b6106c7816106b2565b82525050565b60006020820190506106e260008301846106be565b92915050565b6000602082840312156106fe576106fd610615565b5b600061070c8482850161065d565b91505092915050565b61071e8161061a565b82525050565b60006020820190506107396000830184610715565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076a8261073f565b9050919050565b61077a8161075f565b82525050565b60006020820190506107956000830184610771565b92915050565b600080fd5b6000606082840312156107b6576107b561079b565b5b81905092915050565b600080600060a084860312156107d8576107d7610615565b5b60006107e68682870161065d565b93505060206107f78682870161065d565b9250506040610808868287016107a0565b9150509250925092565b600082825260208201905092915050565b7f67657442696e617279526573756c743a20496e76616c69642070726f706f736960008201527f74696f6e49640000000000000000000000000000000000000000000000000000602082015250565b600061087f602683610812565b915061088a82610823565b604082019050919050565b600060208201905081810360008301526108ae81610872565b9050919050565b6000819050919050565b6108d06108cb8261061a565b6108b5565b82525050565b60006108e282856108bf565b6010820191506108f282846108bf565b6010820191508190509392505050565b7f73657442696e617279526573756c743a20496e76616c6964207369676e61747560008201527f7265000000000000000000000000000000000000000000000000000000000000602082015250565b600061095e602283610812565b915061096982610902565b604082019050919050565b6000602082019050818103600083015261098d81610951565b9050919050565b7f73657442696e617279526573756c743a20496e76616c69642070726f706f736960008201527f74696f6e49640000000000000000000000000000000000000000000000000000602082015250565b60006109f0602683610812565b91506109fb82610994565b604082019050919050565b60006020820190508181036000830152610a1f816109e3565b9050919050565b7f73657442696e617279526573756c743a20526573756c7420616c72656164792060008201527f7365740000000000000000000000000000000000000000000000000000000000602082015250565b6000610a82602383610812565b9150610a8d82610a26565b604082019050919050565b60006020820190508181036000830152610ab181610a75565b9050919050565b6000819050919050565b610acb81610ab8565b82525050565b600060ff82169050919050565b610ae781610ad1565b8114610af257600080fd5b50565b600081359050610b0481610ade565b92915050565b6000610b196020840184610af5565b905092915050565b610b2a81610ad1565b82525050565b610b3981610ab8565b8114610b4457600080fd5b50565b600081359050610b5681610b30565b92915050565b6000610b6b6020840184610b47565b905092915050565b610b7c81610ab8565b82525050565b60608201610b936000830183610b0a565b610ba06000850182610b21565b50610bae6020830183610b5c565b610bbb6020850182610b73565b50610bc96040830183610b5c565b610bd66040850182610b73565b50505050565b6000608082019050610bf16000830185610ac2565b610bfe6020830184610b82565b9392505050565b610c0e8161075f565b8114610c1957600080fd5b50565b600081519050610c2b81610c05565b92915050565b600060208284031215610c4757610c46610615565b5b6000610c5584828501610c1c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea26469706673582212204ef85faab242534ab5ded6f5dab5f56fc2f41c54b3f1e4c40fc95269bbdb303364736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806306c77ce7146100515780634b51e70a14610081578063893d20e8146100b15780639a56d919146100cf575b600080fd5b61006b60048036038101906100669190610672565b6100eb565b60405161007891906106cd565b60405180910390f35b61009b600480360381019061009691906106e8565b6101cf565b6040516100a89190610724565b60405180910390f35b6100b961028a565b6040516100c69190610780565b60405180910390f35b6100e960048036038101906100e491906107bf565b6102b2565b005b60008060801b6fffffffffffffffffffffffffffffffff1916826fffffffffffffffffffffffffffffffff19161415610159576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015090610895565b60405180910390fd5b816fffffffffffffffffffffffffffffffff1916600080856fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460801b6fffffffffffffffffffffffffffffffff191614905092915050565b60008060801b6fffffffffffffffffffffffffffffffff1916826fffffffffffffffffffffffffffffffff1916141561023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610895565b60405180910390fd5b600080836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460801b9050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600083836040516020016102c79291906108d6565b6040516020818303038152906040528051906020012090506102e98183610500565b610328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031f90610974565b60405180910390fd5b600060801b6fffffffffffffffffffffffffffffffff1916836fffffffffffffffffffffffffffffffff19161415610395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038c90610a06565b60405180910390fd5b600060801b6fffffffffffffffffffffffffffffffff1916600080866fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460801b6fffffffffffffffffffffffffffffffff191614610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043d90610a98565b60405180910390fd5b82600080866fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff021916908360801c0217905550826fffffffffffffffffffffffffffffffff1916846fffffffffffffffffffffffffffffffff19167f1a26e02557415617cb31ed9c9ac1bbe2c8f5e32b8f13ddc706d9ad0afb3c2b4460405160405180910390a350505050565b60008073__$47464c6f7588c8075b5d384b19d082a8ec$__635cff288d85856040518363ffffffff1660e01b815260040161053c929190610bdc565b602060405180830381865af4158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d9190610c31565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105bd576105bc610c5e565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161491505092915050565b600080fd5b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b61064f8161061a565b811461065a57600080fd5b50565b60008135905061066c81610646565b92915050565b6000806040838503121561068957610688610615565b5b60006106978582860161065d565b92505060206106a88582860161065d565b9150509250929050565b60008115159050919050565b6106c7816106b2565b82525050565b60006020820190506106e260008301846106be565b92915050565b6000602082840312156106fe576106fd610615565b5b600061070c8482850161065d565b91505092915050565b61071e8161061a565b82525050565b60006020820190506107396000830184610715565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076a8261073f565b9050919050565b61077a8161075f565b82525050565b60006020820190506107956000830184610771565b92915050565b600080fd5b6000606082840312156107b6576107b561079b565b5b81905092915050565b600080600060a084860312156107d8576107d7610615565b5b60006107e68682870161065d565b93505060206107f78682870161065d565b9250506040610808868287016107a0565b9150509250925092565b600082825260208201905092915050565b7f67657442696e617279526573756c743a20496e76616c69642070726f706f736960008201527f74696f6e49640000000000000000000000000000000000000000000000000000602082015250565b600061087f602683610812565b915061088a82610823565b604082019050919050565b600060208201905081810360008301526108ae81610872565b9050919050565b6000819050919050565b6108d06108cb8261061a565b6108b5565b82525050565b60006108e282856108bf565b6010820191506108f282846108bf565b6010820191508190509392505050565b7f73657442696e617279526573756c743a20496e76616c6964207369676e61747560008201527f7265000000000000000000000000000000000000000000000000000000000000602082015250565b600061095e602283610812565b915061096982610902565b604082019050919050565b6000602082019050818103600083015261098d81610951565b9050919050565b7f73657442696e617279526573756c743a20496e76616c69642070726f706f736960008201527f74696f6e49640000000000000000000000000000000000000000000000000000602082015250565b60006109f0602683610812565b91506109fb82610994565b604082019050919050565b60006020820190508181036000830152610a1f816109e3565b9050919050565b7f73657442696e617279526573756c743a20526573756c7420616c72656164792060008201527f7365740000000000000000000000000000000000000000000000000000000000602082015250565b6000610a82602383610812565b9150610a8d82610a26565b604082019050919050565b60006020820190508181036000830152610ab181610a75565b9050919050565b6000819050919050565b610acb81610ab8565b82525050565b600060ff82169050919050565b610ae781610ad1565b8114610af257600080fd5b50565b600081359050610b0481610ade565b92915050565b6000610b196020840184610af5565b905092915050565b610b2a81610ad1565b82525050565b610b3981610ab8565b8114610b4457600080fd5b50565b600081359050610b5681610b30565b92915050565b6000610b6b6020840184610b47565b905092915050565b610b7c81610ab8565b82525050565b60608201610b936000830183610b0a565b610ba06000850182610b21565b50610bae6020830183610b5c565b610bbb6020850182610b73565b50610bc96040830183610b5c565b610bd66040850182610b73565b50505050565b6000608082019050610bf16000830185610ac2565b610bfe6020830184610b82565b9392505050565b610c0e8161075f565b8114610c1957600080fd5b50565b600081519050610c2b81610c05565b92915050565b600060208284031215610c4757610c46610615565b5b6000610c5584828501610c1c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea26469706673582212204ef85faab242534ab5ded6f5dab5f56fc2f41c54b3f1e4c40fc95269bbdb303364736f6c634300080a0033",
  "libraries": {
    "SignatureLib": "0x2686e2ec431b90b5c5b21408771ebf377dbb07bd"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9519,
        "contract": "contracts/MarketOracle.sol:MarketOracle",
        "label": "_results",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes16,t_bytes16)"
      }
    ],
    "types": {
      "t_bytes16": {
        "encoding": "inplace",
        "label": "bytes16",
        "numberOfBytes": "16"
      },
      "t_mapping(t_bytes16,t_bytes16)": {
        "encoding": "mapping",
        "key": "t_bytes16",
        "label": "mapping(bytes16 => bytes16)",
        "numberOfBytes": "32",
        "value": "t_bytes16"
      }
    }
  }
}