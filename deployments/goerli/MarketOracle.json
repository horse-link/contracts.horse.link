{
  "address": "0x4A6f5f634ADB5De38f1a2Df457D6a9F3201781c6",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes16",
          "name": "marketId",
          "type": "bytes16"
        },
        {
          "indexed": true,
          "internalType": "bytes16",
          "name": "propositionId",
          "type": "bytes16"
        }
      ],
      "name": "ResultSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "marketId",
          "type": "bytes16"
        },
        {
          "internalType": "bytes16",
          "name": "propositionId",
          "type": "bytes16"
        }
      ],
      "name": "checkResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "marketId",
          "type": "bytes16"
        }
      ],
      "name": "getResult",
      "outputs": [
        {
          "internalType": "bytes16",
          "name": "",
          "type": "bytes16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "marketId",
          "type": "bytes16"
        },
        {
          "internalType": "bytes16",
          "name": "propositionId",
          "type": "bytes16"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct SignatureLib.Signature",
          "name": "signature",
          "type": "tuple"
        }
      ],
      "name": "setResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7b8295e86c7cde5bd406b8ad662146f0657277bbb109c3209d4df37bb5cce53d",
  "receipt": {
    "to": null,
    "from": "0x1Ab4C6d9e25Fc65C917aFBEfB4E963C400Fb9814",
    "contractAddress": "0x4A6f5f634ADB5De38f1a2Df457D6a9F3201781c6",
    "transactionIndex": 111,
    "gasUsed": "754502",
    "logsBloom": "0x
    "blockHash": "0xfd647fa5d0f5fe827df982ef92b7f61b36d57d5a818431c81de55ea06d34ac02",
    "transactionHash": "0x7b8295e86c7cde5bd406b8ad662146f0657277bbb109c3209d4df37bb5cce53d",
    "logs": [],
    "blockNumber": 8335858,
    "cumulativeGasUsed": "15896111",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "3ea0e38634e2f8ae4cc1df60744b72c9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes16\",\"name\":\"marketId\",\"type\":\"bytes16\"},{\"indexed\":true,\"internalType\":\"bytes16\",\"name\":\"propositionId\",\"type\":\"bytes16\"}],\"name\":\"ResultSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes16\",\"name\":\"marketId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"propositionId\",\"type\":\"bytes16\"}],\"name\":\"checkResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes16\",\"name\":\"marketId\",\"type\":\"bytes16\"}],\"name\":\"getResult\",\"outputs\":[{\"internalType\":\"bytes16\",\"name\":\"\",\"type\":\"bytes16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes16\",\"name\":\"marketId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"propositionId\",\"type\":\"bytes16\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct SignatureLib.Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"setResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MarketOracle.sol\":\"MarketOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.15;\\n\\nimport \\\"./SignatureLib.sol\\\";\\n\\n// Binary Oracle\\ninterface IOracle {\\n    function checkResult(\\n        bytes16 marketId,\\n        bytes16 propositionId\\n    ) external view returns (bool);\\n\\n    function getResult(bytes16 marketId) external view returns (bytes16);\\n\\n    function setResult(\\n        bytes16 marketId,\\n        bytes16 propositionId,\\n        SignatureLib.Signature calldata signature\\n    ) external;\\n\\n    event ResultSet(bytes16 indexed marketId, bytes16 indexed propositionId);\\n}\",\"keccak256\":\"0xad0cf2753f891f7ca48fcc65ad33f32b77f7c88983faf4640f9650f70b5f60a3\",\"license\":\"MIT\"},\"contracts/MarketOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.15;\\n\\nimport \\\"./IOracle.sol\\\";\\nimport \\\"./SignatureLib.sol\\\";\\n\\ncontract MarketOracle is IOracle {\\n\\tmapping(bytes16 => bytes16) private _results;\\n\\taddress private immutable _owner;\\n\\n\\tconstructor() {\\n\\t\\t_owner = msg.sender;\\n\\t}\\n\\n\\tfunction getOwner() external view returns (address) {\\n\\t\\treturn _owner;\\n\\t}\\n\\n\\tfunction checkResult(\\n\\t\\tbytes16 marketId,\\n\\t\\tbytes16 propositionId\\n\\t) external view returns (bool) {\\n\\t\\trequire(\\n\\t\\t\\tpropositionId != bytes16(0),\\n\\t\\t\\t\\\"getBinaryResult: Invalid propositionId\\\"\\n\\t\\t);\\n\\t\\treturn _results[marketId] == propositionId;\\n\\t}\\n\\n\\tfunction getResult(bytes16 marketId) external view returns (bytes16) {\\n\\t\\trequire(\\n\\t\\t\\tmarketId != bytes16(0),\\n\\t\\t\\t\\\"getBinaryResult: Invalid propositionId\\\"\\n\\t\\t);\\n\\t\\treturn _results[marketId];\\n\\t}\\n\\n\\tfunction setResult(\\n\\t\\tbytes16 marketId,\\n\\t\\tbytes16 propositionId,\\n\\t\\tSignatureLib.Signature calldata signature\\n\\t) external {\\n\\t\\tbytes32 messageHash = keccak256(abi.encodePacked(marketId, propositionId));\\n\\t\\trequire(\\n\\t\\t\\tisValidSignature(messageHash, signature),\\n\\t\\t\\t\\\"setBinaryResult: Invalid signature\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\tpropositionId != bytes16(0),\\n\\t\\t\\t\\\"setBinaryResult: Invalid propositionId\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\t_results[marketId] == bytes16(0),\\n\\t\\t\\t\\\"setBinaryResult: Result already set\\\"\\n\\t\\t);\\n\\t\\t_results[marketId] = propositionId;\\n\\n\\t\\temit ResultSet(marketId, propositionId);\\n\\t}\\n\\n\\tfunction isValidSignature(\\n\\t\\tbytes32 messageHash,\\n\\t\\tSignatureLib.Signature calldata signature\\n\\t) private view returns (bool) {\\n\\t\\taddress signer = SignatureLib.recoverSigner(messageHash, signature);\\n\\t\\tassert(signer != address(0));\\n\\t\\treturn address(signer) == address(_owner);\\n\\t}\\n}\\n\",\"keccak256\":\"0xa0c9cb045bc24a1344e969e7a829117c75f9bcbb0ca64254eb25bf18645f71f0\",\"license\":\"MIT\"},\"contracts/SignatureLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.15;\\n\\nlibrary SignatureLib {\\n    struct Signature {\\n        uint8 v;\\n        bytes32 r;\\n        bytes32 s;\\n    }\\n\\n    function recoverSigner(\\n        bytes32 message,\\n        Signature memory signature\\n    ) public pure returns (address) {\\n        bytes32 prefixedHash = keccak256(\\n            abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", message)\\n        );\\n        return ecrecover(prefixedHash, signature.v, signature.r, signature.s);\\n    }\\n}\\n\",\"keccak256\":\"0x3d2aea16b52e98b22e10addc4401c67151de809a94688cc5fa7c0e5529b65ccb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050608051610cbf6100676000396000818161028c01526105bb0152610cbf6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306c77ce7146100515780634b51e70a14610081578063893d20e8146100b15780639a56d919146100cf575b600080fd5b61006b6004803603810190610066919061066e565b6100eb565b60405161007891906106c9565b60405180910390f35b61009b600480360381019061009691906106e4565b6101ce565b6040516100a89190610720565b60405180910390f35b6100b9610288565b6040516100c6919061077c565b60405180910390f35b6100e960048036038101906100e491906107bb565b6102b0565b005b60008060801b6fffffffffffffffffffffffffffffffff1916826fffffffffffffffffffffffffffffffff191603610158576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014f90610891565b60405180910390fd5b816fffffffffffffffffffffffffffffffff1916600080856fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460801b6fffffffffffffffffffffffffffffffff191614905092915050565b60008060801b6fffffffffffffffffffffffffffffffff1916826fffffffffffffffffffffffffffffffff19160361023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023290610891565b60405180910390fd5b600080836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460801b9050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600083836040516020016102c59291906108d2565b6040516020818303038152906040528051906020012090506102e781836104fd565b610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d90610970565b60405180910390fd5b600060801b6fffffffffffffffffffffffffffffffff1916836fffffffffffffffffffffffffffffffff191603610392576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038990610a02565b60405180910390fd5b600060801b6fffffffffffffffffffffffffffffffff1916600080866fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460801b6fffffffffffffffffffffffffffffffff191614610443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043a90610a94565b60405180910390fd5b82600080866fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff021916908360801c0217905550826fffffffffffffffffffffffffffffffff1916846fffffffffffffffffffffffffffffffff19167f1a26e02557415617cb31ed9c9ac1bbe2c8f5e32b8f13ddc706d9ad0afb3c2b4460405160405180910390a350505050565b600080732686e2ec431b90b5c5b21408771ebf377dbb07bd635cff288d85856040518363ffffffff1660e01b8152600401610539929190610bd8565b602060405180830381865af4158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a9190610c2d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105b9576105b8610c5a565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161491505092915050565b600080fd5b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b61064b81610616565b811461065657600080fd5b50565b60008135905061066881610642565b92915050565b6000806040838503121561068557610684610611565b5b600061069385828601610659565b92505060206106a485828601610659565b9150509250929050565b60008115159050919050565b6106c3816106ae565b82525050565b60006020820190506106de60008301846106ba565b92915050565b6000602082840312156106fa576106f9610611565b5b600061070884828501610659565b91505092915050565b61071a81610616565b82525050565b60006020820190506107356000830184610711565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107668261073b565b9050919050565b6107768161075b565b82525050565b6000602082019050610791600083018461076d565b92915050565b600080fd5b6000606082840312156107b2576107b1610797565b5b81905092915050565b600080600060a084860312156107d4576107d3610611565b5b60006107e286828701610659565b93505060206107f386828701610659565b92505060406108048682870161079c565b9150509250925092565b600082825260208201905092915050565b7f67657442696e617279526573756c743a20496e76616c69642070726f706f736960008201527f74696f6e49640000000000000000000000000000000000000000000000000000602082015250565b600061087b60268361080e565b91506108868261081f565b604082019050919050565b600060208201905081810360008301526108aa8161086e565b9050919050565b6000819050919050565b6108cc6108c782610616565b6108b1565b82525050565b60006108de82856108bb565b6010820191506108ee82846108bb565b6010820191508190509392505050565b7f73657442696e617279526573756c743a20496e76616c6964207369676e61747560008201527f7265000000000000000000000000000000000000000000000000000000000000602082015250565b600061095a60228361080e565b9150610965826108fe565b604082019050919050565b600060208201905081810360008301526109898161094d565b9050919050565b7f73657442696e617279526573756c743a20496e76616c69642070726f706f736960008201527f74696f6e49640000000000000000000000000000000000000000000000000000602082015250565b60006109ec60268361080e565b91506109f782610990565b604082019050919050565b60006020820190508181036000830152610a1b816109df565b9050919050565b7f73657442696e617279526573756c743a20526573756c7420616c72656164792060008201527f7365740000000000000000000000000000000000000000000000000000000000602082015250565b6000610a7e60238361080e565b9150610a8982610a22565b604082019050919050565b60006020820190508181036000830152610aad81610a71565b9050919050565b6000819050919050565b610ac781610ab4565b82525050565b600060ff82169050919050565b610ae381610acd565b8114610aee57600080fd5b50565b600081359050610b0081610ada565b92915050565b6000610b156020840184610af1565b905092915050565b610b2681610acd565b82525050565b610b3581610ab4565b8114610b4057600080fd5b50565b600081359050610b5281610b2c565b92915050565b6000610b676020840184610b43565b905092915050565b610b7881610ab4565b82525050565b60608201610b8f6000830183610b06565b610b9c6000850182610b1d565b50610baa6020830183610b58565b610bb76020850182610b6f565b50610bc56040830183610b58565b610bd26040850182610b6f565b50505050565b6000608082019050610bed6000830185610abe565b610bfa6020830184610b7e565b9392505050565b610c0a8161075b565b8114610c1557600080fd5b50565b600081519050610c2781610c01565b92915050565b600060208284031215610c4357610c42610611565b5b6000610c5184828501610c18565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea264697066735822122058103f008bc3299c9dadfc8c621741b484a2b0f951de92522ba93ec8b2e195ef64736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806306c77ce7146100515780634b51e70a14610081578063893d20e8146100b15780639a56d919146100cf575b600080fd5b61006b6004803603810190610066919061066e565b6100eb565b60405161007891906106c9565b60405180910390f35b61009b600480360381019061009691906106e4565b6101ce565b6040516100a89190610720565b60405180910390f35b6100b9610288565b6040516100c6919061077c565b60405180910390f35b6100e960048036038101906100e491906107bb565b6102b0565b005b60008060801b6fffffffffffffffffffffffffffffffff1916826fffffffffffffffffffffffffffffffff191603610158576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014f90610891565b60405180910390fd5b816fffffffffffffffffffffffffffffffff1916600080856fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460801b6fffffffffffffffffffffffffffffffff191614905092915050565b60008060801b6fffffffffffffffffffffffffffffffff1916826fffffffffffffffffffffffffffffffff19160361023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023290610891565b60405180910390fd5b600080836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460801b9050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600083836040516020016102c59291906108d2565b6040516020818303038152906040528051906020012090506102e781836104fd565b610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d90610970565b60405180910390fd5b600060801b6fffffffffffffffffffffffffffffffff1916836fffffffffffffffffffffffffffffffff191603610392576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038990610a02565b60405180910390fd5b600060801b6fffffffffffffffffffffffffffffffff1916600080866fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460801b6fffffffffffffffffffffffffffffffff191614610443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043a90610a94565b60405180910390fd5b82600080866fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff021916908360801c0217905550826fffffffffffffffffffffffffffffffff1916846fffffffffffffffffffffffffffffffff19167f1a26e02557415617cb31ed9c9ac1bbe2c8f5e32b8f13ddc706d9ad0afb3c2b4460405160405180910390a350505050565b60008073__$47464c6f7588c8075b5d384b19d082a8ec$__635cff288d85856040518363ffffffff1660e01b8152600401610539929190610bd8565b602060405180830381865af4158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a9190610c2d565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105b9576105b8610c5a565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161491505092915050565b600080fd5b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b61064b81610616565b811461065657600080fd5b50565b60008135905061066881610642565b92915050565b6000806040838503121561068557610684610611565b5b600061069385828601610659565b92505060206106a485828601610659565b9150509250929050565b60008115159050919050565b6106c3816106ae565b82525050565b60006020820190506106de60008301846106ba565b92915050565b6000602082840312156106fa576106f9610611565b5b600061070884828501610659565b91505092915050565b61071a81610616565b82525050565b60006020820190506107356000830184610711565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107668261073b565b9050919050565b6107768161075b565b82525050565b6000602082019050610791600083018461076d565b92915050565b600080fd5b6000606082840312156107b2576107b1610797565b5b81905092915050565b600080600060a084860312156107d4576107d3610611565b5b60006107e286828701610659565b93505060206107f386828701610659565b92505060406108048682870161079c565b9150509250925092565b600082825260208201905092915050565b7f67657442696e617279526573756c743a20496e76616c69642070726f706f736960008201527f74696f6e49640000000000000000000000000000000000000000000000000000602082015250565b600061087b60268361080e565b91506108868261081f565b604082019050919050565b600060208201905081810360008301526108aa8161086e565b9050919050565b6000819050919050565b6108cc6108c782610616565b6108b1565b82525050565b60006108de82856108bb565b6010820191506108ee82846108bb565b6010820191508190509392505050565b7f73657442696e617279526573756c743a20496e76616c6964207369676e61747560008201527f7265000000000000000000000000000000000000000000000000000000000000602082015250565b600061095a60228361080e565b9150610965826108fe565b604082019050919050565b600060208201905081810360008301526109898161094d565b9050919050565b7f73657442696e617279526573756c743a20496e76616c69642070726f706f736960008201527f74696f6e49640000000000000000000000000000000000000000000000000000602082015250565b60006109ec60268361080e565b91506109f782610990565b604082019050919050565b60006020820190508181036000830152610a1b816109df565b9050919050565b7f73657442696e617279526573756c743a20526573756c7420616c72656164792060008201527f7365740000000000000000000000000000000000000000000000000000000000602082015250565b6000610a7e60238361080e565b9150610a8982610a22565b604082019050919050565b60006020820190508181036000830152610aad81610a71565b9050919050565b6000819050919050565b610ac781610ab4565b82525050565b600060ff82169050919050565b610ae381610acd565b8114610aee57600080fd5b50565b600081359050610b0081610ada565b92915050565b6000610b156020840184610af1565b905092915050565b610b2681610acd565b82525050565b610b3581610ab4565b8114610b4057600080fd5b50565b600081359050610b5281610b2c565b92915050565b6000610b676020840184610b43565b905092915050565b610b7881610ab4565b82525050565b60608201610b8f6000830183610b06565b610b9c6000850182610b1d565b50610baa6020830183610b58565b610bb76020850182610b6f565b50610bc56040830183610b58565b610bd26040850182610b6f565b50505050565b6000608082019050610bed6000830185610abe565b610bfa6020830184610b7e565b9392505050565b610c0a8161075b565b8114610c1557600080fd5b50565b600081519050610c2781610c01565b92915050565b600060208284031215610c4357610c42610611565b5b6000610c5184828501610c18565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea264697066735822122058103f008bc3299c9dadfc8c621741b484a2b0f951de92522ba93ec8b2e195ef64736f6c634300080f0033",
  "libraries": {
    "SignatureLib": "0x2686e2ec431b90b5c5b21408771ebf377dbb07bd"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12904,
        "contract": "contracts/MarketOracle.sol:MarketOracle",
        "label": "_results",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes16,t_bytes16)"
      }
    ],
    "types": {
      "t_bytes16": {
        "encoding": "inplace",
        "label": "bytes16",
        "numberOfBytes": "16"
      },
      "t_mapping(t_bytes16,t_bytes16)": {
        "encoding": "mapping",
        "key": "t_bytes16",
        "label": "mapping(bytes16 => bytes16)",
        "numberOfBytes": "32",
        "value": "t_bytes16"
      }
    }
  }
}